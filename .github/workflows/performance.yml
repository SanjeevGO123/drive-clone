name: "Performance Analysis"

on:
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  bundle-analysis:
    name: Bundle Size Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci --legacy-peer-deps

    - name: Build and analyze bundle
      run: |
        CI=false npm run build
        npx webpack-bundle-analyzer build/static/js/*.js --mode server --port 3001 &
        sleep 5
        curl http://localhost:3001 > bundle-report.html
      env:
        REACT_APP_USER_POOL_ID: ${{ secrets.REACT_APP_USER_POOL_ID }}
        REACT_APP_CLIENT_ID: ${{ secrets.REACT_APP_CLIENT_ID }}

    - name: Install bundle analyzer
      run: npm install -g webpack-bundle-analyzer

    - name: Generate bundle report
      run: |
        echo "## Bundle Size Report ðŸ“Š" > bundle-report.md
        echo "" >> bundle-report.md
        echo "| File | Size | Gzipped |" >> bundle-report.md
        echo "|------|------|---------|" >> bundle-report.md
        
        for file in build/static/js/*.js; do
          if [ -f "$file" ]; then
            filename=$(basename "$file")
            size=$(stat -f%z "$file" 2>/dev/null || stat -c%s "$file")
            gzipped=$(gzip -c "$file" | wc -c)
            echo "| $filename | ${size} bytes | ${gzipped} bytes |" >> bundle-report.md
          fi
        done

    - name: Comment PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const report = fs.readFileSync('bundle-report.md', 'utf8');
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: report
          });

  lighthouse:
    name: Lighthouse Performance
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci --legacy-peer-deps

    - name: Build application
      run: |
        CI=false npm run build
      env:
        REACT_APP_USER_POOL_ID: ${{ secrets.REACT_APP_USER_POOL_ID }}
        REACT_APP_CLIENT_ID: ${{ secrets.REACT_APP_CLIENT_ID }}

    - name: Serve build
      run: |
        npm install -g serve
        serve -s build -p 3000 &
        sleep 5

    - name: Run Lighthouse
      uses: treosh/lighthouse-ci-action@v10
      with:
        uploadArtifacts: true
        temporaryPublicStorage: true
