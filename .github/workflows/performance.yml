name: "Performance Analysis"

on:
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  bundle-analysis:
    name: Bundle Size Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci --legacy-peer-deps

    - name: Build and analyze bundle
      run: |
        CI=false npm run build
        # Use webpack-bundle-analyzer to generate a static report instead of server mode
        npx webpack-bundle-analyzer build/static/js/main.*.js --mode static --report bundle-report.html --no-open
      env:
        REACT_APP_USER_POOL_ID: ${{ secrets.REACT_APP_USER_POOL_ID }}
        REACT_APP_CLIENT_ID: ${{ secrets.REACT_APP_CLIENT_ID }}

    - name: Generate bundle report
      run: |
        echo "## Bundle Size Report ðŸ“Š" > bundle-report.md
        echo "" >> bundle-report.md
        echo "| File | Size | Gzipped |" >> bundle-report.md
        echo "|------|------|---------|" >> bundle-report.md
        
        # Calculate sizes for all JS and CSS files
        for file in build/static/js/*.js build/static/css/*.css; do
          if [ -f "$file" ]; then
            filename=$(basename "$file")
            size=$(stat -c%s "$file" 2>/dev/null || stat -f%z "$file" 2>/dev/null || echo "0")
            gzipped=$(gzip -c "$file" | wc -c)
            # Convert bytes to KB for readability
            size_kb=$((size / 1024))
            gzipped_kb=$((gzipped / 1024))
            echo "| $filename | ${size_kb} KB | ${gzipped_kb} KB |" >> bundle-report.md
          fi
        done
        
        echo "" >> bundle-report.md
        echo "ðŸ“Š **Bundle Analysis HTML Report**: [View Details](./bundle-report.html)" >> bundle-report.md

    - name: Comment PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const report = fs.readFileSync('bundle-report.md', 'utf8');
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: report
          });

    - name: Upload bundle analysis
      uses: actions/upload-artifact@v4
      with:
        name: bundle-analysis
        path: |
          bundle-report.html
          bundle-report.md
        retention-days: 30

  lighthouse:
    name: Lighthouse Performance
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci --legacy-peer-deps

    - name: Build application
      run: |
        CI=false npm run build
      env:
        REACT_APP_USER_POOL_ID: ${{ secrets.REACT_APP_USER_POOL_ID }}
        REACT_APP_CLIENT_ID: ${{ secrets.REACT_APP_CLIENT_ID }}

    - name: Serve build
      run: |
        npm install -g serve
        serve -s build -p 3000 &
        sleep 10
        # Test if server is running
        curl --retry 5 --retry-delay 2 http://localhost:3000 || (echo "Server failed to start" && exit 1)

    - name: Run Lighthouse
      uses: treosh/lighthouse-ci-action@v10
      with:
        uploadArtifacts: true
        temporaryPublicStorage: true
